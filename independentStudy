THE DATE AND MYDATE VARIABLES KEEP GIVING ME TROUBLE; SCAN10 IS THE USER INPUT OF DATA AS AN INTEGER BECAUSE I WANT TO COMPARE IT WHEN
PUTTING THINGS IN THE SCHEDULE; I DON'T KNOW WHAT THE ISSUE IS THO.

package CompSci;

import java.util.Scanner;
import java.util.ArrayList;

public class ScheduleTester
{

	public static void main(String[] args)
	{
		Schedule abc = new Schedule();
		System.out.println("You are ready to add things to your schedule!");
		System.out.println("But before you begin, please enter the date in mmddyyyy format!");
		Scanner scan10 = new Scanner(System.in);
		int date = scan10.nextInt();
		abc.setDate(date);
		System.out.println("Please select one: a) add to schedule or b) visit schedule");
		String str = scan10.nextLine();
		if(str.equals("a")) {
			System.out.println("What would you like to add?");
			System.out.println("a. A new task, b. A new assignment");
			Scanner scan1 = new Scanner(System.in);
			if(scan1.equals("a")) {
				System.out.println("Enter your task: ");
				String str1 = scan10.nextLine();
				System.out.println("How important is it? Rate on a scale of 1-100.");
				Scanner scan4 = new Scanner(System.in);
				int num = scan4.nextInt();
				abc.createNewTask(schedule, str, num);
				System.out.println("Congratulations! Task has been added!");
			} else {
				System.out.println("What type of assignment is it? a. test, b. quiz, c. project, or d. homework?");
				System.out.println("Please enter your desired choice.");
				String str1 = scan10.nextLine();
				if (str1.equals("test")) {
					abc.addTest(neededList);
					System.out.println("You've added this upcoming test to your list!");
					System.out.println("Would you like to add something else?");
					Scanner scan20 = new Scanner (System.in);
					String str20 = scan20.nextLine();
					if (str20.equals("YES")) {
						System.out.println("Please add new task by clicking run.");
					} else {
						System.out.println("Good Job!");
						break;
					}
				} else if (str1.equals("quiz")) {
					addQuiz(neededList);
					System.out.println("You've added this upcoming quiz to your list!");
					System.out.println("Would you like to add something else?");
					Scanner scan21 = new Scanner (System.in);
					String str21 = scan21.nextLine();
					if (str21.equals("YES")) {
						System.out.println("Please add new task by clicking run.");
					} else {
						System.out.println("Good Job!");
						break;
					}
					
				} else if (str1.equals("project")) {
					addProject(neededList);
					System.out.println("You've added this upcoming project to your list!");
					System.out.println("Would you like to add something else?");
					Scanner scan22 = new Scanner (System.in);
					String str22 = scan22.nextLine();
					if (str22.equals("YES")) {
						System.out.println("Please add new task by clicking run.");
					} else {
						System.out.println("Good Job!");
						break;
					}
				} else if (str1.equals("homework"))
				System.out.println("Enter YES if you would like to see updated schedule.");
				Scanner scan5 = new Scanner(System.in);
				if (scan5.equals("YES")) {
					abc.getList();
				} else {
					System.out.println("Good job for being organized! Thanks for using!");
				}
			}
		} else if(scan10.equals("b")) {
			System.out.println("Below is your schedule!");
			retrieveSchBeforeUpdate(neededList);
		}
		
	} 
}
	public Schedule {		
		private ArrayList<String>schedule;
		private String newTask;
		private int importance;
		private int date;
		
		public Schedule() 
		{
			schedule = new ArrayList<String>();
			newTask = "";
			importance = 0;
			date = 0;
		}
		public Schedule(int date)
		{
			schedule = new ArrayList<String>();
			newTask = "";
			importance = 0;
			date = 0;
		}
		public Schedule(ArrayList<String>schedule, String newTask, int importance, int date) 
		{
			this.schedule = schedule;
			this.newTask = newTask;
			this.importance = importance;
			this.date = date;
		}
		public ArrayList<String> getList()
		{
			return this.schedule;
		}
		public void setList(ArrayList<String>schedule) 
		{
			this.schedule = schedule;
		}
		public int getDate() {
			return this.date;
		}
		public void setDate(int date) {
			this.date = date;
		}
		public static void createNewTask(ArrayList<String>schedule, String newTask, int importance) 
		{
			schedule.add(importance, newTask);
			
		}
		public static ArrayList<String> retrieveSchBeforeUpdate(ArrayList<String>schedule)
		{
			return schedule;
		}
		public static ArrayList<String> viewMySchedule(ArrayList<String>schedule)
		{
			return schedule;
		}
		public static ArrayList<String> addTest(ArrayList<String>schedule)
		{
			String temp = "test";
			for (int i = 0; i<schedule.size(); i++) 
			{
				if(schedule.get(i)!= null) 
				{
					if (schedule.get(i).getDate<myDate)
					{
						schedule.add(i, "test");
						schedule.add(date);
					}
				} else {
					i++;
				}
			}
		}
		public static ArrayList<String> addQuiz(ArrayList<String> schedule)
		{
			String temp = "quiz";
			for (int i = 0; i<schedule.size(); i++) 
			{
				if(schedule.get(i)!= null) 
				{
					if (schedule.get(i).getDate<myDate)
					{
						schedule.add(i, "quiz");
						schedule.add(date);
					}
				} else {
					i++;
				}
			}
		}
		public static ArrayList<String> addProject(ArrayList<String>schedule)
		{
			String temp = "project";
			for (int i = 0; i<schedule.size(); i++) 
			{
				if(schedule.get(i)!= null) 
				{
					if (schedule.get(i).getDate<myDate)
					{
						schedule.add(i, "project");
						schedule.add(date);
					}
				} else {
					i++;
				}
			}
		}
		public static ArrayList<String> addHomework(ArrayList<String>schedule)
		{
			String temp = "homework";
			for (int i = 0; i<schedule.size(); i++) 
			{
				if(schedule.get(i)!= null) 
				{
					if (schedule.get(i).getDate<myDate)
					{
						schedule.add(i, "homework");
						schedule.add(date);
					}
				} else {
					i++;
				}
			}
		}
		
		
	}
}
